<?xml version="1.0"?>
<rdf:RDF xmlns="https://raw.github.com/ShahimEssaid/OwlCL/master/owl/owlcl.owl#"
     xml:base="https://raw.github.com/ShahimEssaid/OwlCL/master/owl/owlcl.owl"
     xmlns:arg="http://owl.essaid.com/owlcl/owlcl_"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:owlcl="http://owl.essaid.com/"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:owlcl2="http://owl.essaid.com/owlcl/">
    <owl:Ontology rdf:about="https://raw.github.com/ShahimEssaid/OwlCL/master/owl/owlcl.owl"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Annotation properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://owl.essaid.com/owlcl/owlcl_iri_maps_to -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_iri_maps_to">
        <rdfs:comment>An annotation property that says the subject&apos;s IRI (the left side in the tools code) mappes to the object&apos;s IRI (the right side). The object has to be an IRI, not a string with an IRI value. Mappings can be transitive (but without cycles), i.e.  A mappes to B and B mappes to C, the tools will realize that A is mapped to C but will not check for cycles (which will probably cause an exception at runtime). Also, the inverse mapping is implied and the tools allow the user to apply the mapping in a forward or backward direction.</rdfs:comment>
    </owl:AnnotationProperty>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_isftools-module-source -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_isftools-module-source">
        <rdfs:comment>This property is used on a module annotation ontology (not class, etc.) to hold the literal value (i.e. string datatype) of the IRI of a source ontology that is already imported into the annotation ontology. The idea is that the annotation ontology might import several ontologies (to help with editing and exploration) but we only want few of them to be considered sources for the various scripts.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#deprecated"/>
    </owl:AnnotationProperty>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_classified_addlegacy -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_classified_addlegacy"/>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_classified_builders -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_classified_builders"/>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_classified_cleanlegacy -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_classified_cleanlegacy"/>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_classified_filename -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_classified_filename">
        <rdfs:comment>A custom name for the file name of the classified version of the module. It should have a .owl extension. Also, make sure that the name will not conflict with other names when various modules are generated in the same directory.</rdfs:comment>
    </owl:AnnotationProperty>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_classified_import_iri -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_classified_import_iri"/>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_classified_iri -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_classified_iri">
        <rdfs:comment>Specifies the IRI of the classified version of the generated module.</rdfs:comment>
    </owl:AnnotationProperty>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_exclude -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_exclude">
        <rdfs:comment>An annotation property that is used to mark entities that should be excluded from a module file. Any children will be moved up.</rdfs:comment>
    </owl:AnnotationProperty>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_exclude_parent -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_exclude_parent">
        <rdfs:comment>This annotation is meant to prevent pulling the class in (and all its parents) while doing a superclass closure on the already included classes. 

However, if this class is already indicrectly included (by an axiom reference to the class) by some of the included axioms, this annotation will not work since the class is not a &quot;parent&quot; anymore. Rather, it is an &quot;included&quot; class, and the annotation will not work. To fix this situation, at least for now, when this annotation is used on a class, any axiom that is being included in the built module is first checked to see if its signature contains a class annotated with this annotation. The axiom is not included if it references a class annotated with this property.  (this is actually done at the IRI level so it also applies to properties.)

When an axiom is excluded based on its signautre, an INFO level log entry is made (by the tool in the log file) so that this can be easily noticed and corrected as needed.</rdfs:comment>
    </owl:AnnotationProperty>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_exclude_subs -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_exclude_subs">
        <rdfs:comment>An annotation property that is used to mark entities that should have their descentants excluded from a module file. To also exclude the class itself also add the exclude annotation.</rdfs:comment>
    </owl:AnnotationProperty>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_include -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_include">
        <rdfs:comment>An annotation property that is used to mark entities that should be included in a module file.

This should cause all the logical axioms that define the IRI of the entity to be included in the module, These axioms are the declaration, and any axioms like sub, equivalent, disjoint, etc. Also, all annotations on the entity will be included. 

Axioms that simply reference the annotated entity (i.e. the axioms that define some other entity, and refer to this annotated entity when they do that, will not be included.) will not be included. For example, if A is annotated, and B is sub of A (i.e. B references A in its definition), the axiom B sub A will not be included. However, keep in mind that if B disjoint with A, it also means that A is disjoint with B, and this axiom is part of the definition of A, and it will be included.

In addition to the above axioms, the tool will later include the superclass closure of the annotated entity unless the &quot;exclude_parent&quot; annotatin is used on one or more paths to the root. See that annotation for more detail.</rdfs:comment>
    </owl:AnnotationProperty>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_include_instances -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_include_instances"/>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_include_subs -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_include_subs">
        <rdfs:comment>An annotation property that is used to mark entities that should be included in a module file along with all their subs.</rdfs:comment>
    </owl:AnnotationProperty>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_is_classified -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_is_classified"/>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_is_unclassified -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_is_unclassified">
        <rdfs:comment>A &quot;true&quot; or &quot;false&quot; value to indicate if, by default, the unclassified version should be generated.</rdfs:comment>
    </owl:AnnotationProperty>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_source_exclude -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_source_exclude"/>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_unclassified_addlegacy -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_unclassified_addlegacy"/>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_unclassified_builders -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_unclassified_builders">
        <rdfs:comment>The name(s) of the module builder to use for this build.</rdfs:comment>
    </owl:AnnotationProperty>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_unclassified_cleanlegacy -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_unclassified_cleanlegacy"/>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_unclassified_filename -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_unclassified_filename"/>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_unclassified_import_iri -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_unclassified_import_iri"/>
    


    <!-- http://owl.essaid.com/owlcl/owlcl_module_unclassified_iri -->

    <owl:AnnotationProperty rdf:about="http://owl.essaid.com/owlcl/owlcl_module_unclassified_iri">
        <rdfs:comment>Specifies the IRI of the unclassified version of the generated module.</rdfs:comment>
    </owl:AnnotationProperty>
</rdf:RDF>



<!-- Generated by the OWL API (version 3.5.1) http://owlapi.sourceforge.net -->

